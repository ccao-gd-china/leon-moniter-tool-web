<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.godaddy.ecomm.dao.fulfillment.ErrorOrderRequestXmlMapper">
  <resultMap id="BaseResultMap" type="com.godaddy.ecomm.base.fulfillment.ErrorOrderRequestXml">
    <id column="errorId" property="errorId" jdbcType="INTEGER"/>
    <result column="order_id" property="order_id" jdbcType="INTEGER"/>
    <result column="privateLabelId" property="privateLabelId" jdbcType="INTEGER"/>
    <result column="createDate" property="createDate" jdbcType="TIMESTAMP"/>
    <result column="snapshotTime" property="snapshotTime" jdbcType="TIMESTAMP"/>
    <result column="processCtrl" property="processCtrl" jdbcType="CHAR"/>
    <result column="api_orderRequestStatusId" property="api_orderRequestStatusId"
      jdbcType="INTEGER"/>
    <result column="messageText" property="messageText" jdbcType="VARCHAR"/>
    <result column="orderXMLDBCS" property="orderXMLDBCS" jdbcType="LONGNVARCHAR"/>
    <result column="gdshop_termsOfServiceAgreedTo" property="gdshop_termsOfServiceAgreedTo"
      jdbcType="BIT"/>
    <result column="snapshot_id" property="snapshot_id" jdbcType="INTEGER"/>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.godaddy.ecomm.base.fulfillment.ErrorOrderRequestXml"
    extends="BaseResultMap">
    <result column="orderXML" property="orderXML" jdbcType="LONGVARCHAR"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")"
                    separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")"
                    separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    errorId, order_id, privateLabelId, createDate, processCtrl, api_orderRequestStatusId,
    messageText, orderXMLDBCS, gdshop_termsOfServiceAgreedTo, snapshot_id
  </sql>
  <sql id="Blob_Column_List">
    orderXML
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
    parameterType="com.godaddy.ecomm.base.fulfillment.ErrorOrderRequestXmlExample">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List"/>
    from ErrorOrderRequestXml
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap"
    parameterType="com.godaddy.ecomm.base.fulfillment.ErrorOrderRequestXmlExample">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from ErrorOrderRequestXml
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List"/>
    from ErrorOrderRequestXml
    where errorId = #{errorId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ErrorOrderRequestXml
    where errorId = #{errorId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample"
    parameterType="com.godaddy.ecomm.base.fulfillment.ErrorOrderRequestXmlExample">
    delete from ErrorOrderRequestXml
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="com.godaddy.ecomm.base.fulfillment.ErrorOrderRequestXml">
    insert into ErrorOrderRequestXml (errorId, order_id, privateLabelId,
    createDate, processCtrl, api_orderRequestStatusId,
    messageText, orderXMLDBCS, gdshop_termsOfServiceAgreedTo,
    snapshot_id, orderXML)
    values (#{errorId,jdbcType=INTEGER}, #{order_id,jdbcType=INTEGER},
    #{privateLabelId,jdbcType=INTEGER},
    #{createDate,jdbcType=TIMESTAMP}, #{processCtrl,jdbcType=CHAR},
    #{api_orderRequestStatusId,jdbcType=INTEGER},
    #{messageText,jdbcType=VARCHAR}, #{orderXMLDBCS,jdbcType=LONGNVARCHAR},
    #{gdshop_termsOfServiceAgreedTo,jdbcType=BIT},
    #{snapshot_id,jdbcType=INTEGER}, #{orderXML,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective"
    parameterType="com.godaddy.ecomm.base.fulfillment.ErrorOrderRequestXml">
    insert into ErrorOrderRequestXml
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="errorId != null">
        errorId,
      </if>
      <if test="order_id != null">
        order_id,
      </if>
      <if test="privateLabelId != null">
        privateLabelId,
      </if>
      <if test="createDate != null">
        createDate,
      </if>
      <if test="processCtrl != null">
        processCtrl,
      </if>
      <if test="api_orderRequestStatusId != null">
        api_orderRequestStatusId,
      </if>
      <if test="messageText != null">
        messageText,
      </if>
      <if test="orderXMLDBCS != null">
        orderXMLDBCS,
      </if>
      <if test="gdshop_termsOfServiceAgreedTo != null">
        gdshop_termsOfServiceAgreedTo,
      </if>
      <if test="snapshot_id != null">
        snapshot_id,
      </if>
      <if test="orderXML != null">
        orderXML,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="errorId != null">
        #{errorId,jdbcType=INTEGER},
      </if>
      <if test="order_id != null">
        #{order_id,jdbcType=INTEGER},
      </if>
      <if test="privateLabelId != null">
        #{privateLabelId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="processCtrl != null">
        #{processCtrl,jdbcType=CHAR},
      </if>
      <if test="api_orderRequestStatusId != null">
        #{api_orderRequestStatusId,jdbcType=INTEGER},
      </if>
      <if test="messageText != null">
        #{messageText,jdbcType=VARCHAR},
      </if>
      <if test="orderXMLDBCS != null">
        #{orderXMLDBCS,jdbcType=LONGNVARCHAR},
      </if>
      <if test="gdshop_termsOfServiceAgreedTo != null">
        #{gdshop_termsOfServiceAgreedTo,jdbcType=BIT},
      </if>
      <if test="snapshot_id != null">
        #{snapshot_id,jdbcType=INTEGER},
      </if>
      <if test="orderXML != null">
        #{orderXML,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample"
    parameterType="com.godaddy.ecomm.base.fulfillment.ErrorOrderRequestXmlExample"
    resultType="java.lang.Integer">
    select count(*) from ErrorOrderRequestXml
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ErrorOrderRequestXml
    <set>
      <if test="record.errorId != null">
        errorId = #{record.errorId,jdbcType=INTEGER},
      </if>
      <if test="record.order_id != null">
        order_id = #{record.order_id,jdbcType=INTEGER},
      </if>
      <if test="record.privateLabelId != null">
        privateLabelId = #{record.privateLabelId,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        createDate = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.processCtrl != null">
        processCtrl = #{record.processCtrl,jdbcType=CHAR},
      </if>
      <if test="record.api_orderRequestStatusId != null">
        api_orderRequestStatusId = #{record.api_orderRequestStatusId,jdbcType=INTEGER},
      </if>
      <if test="record.messageText != null">
        messageText = #{record.messageText,jdbcType=VARCHAR},
      </if>
      <if test="record.orderXMLDBCS != null">
        orderXMLDBCS = #{record.orderXMLDBCS,jdbcType=LONGNVARCHAR},
      </if>
      <if test="record.gdshop_termsOfServiceAgreedTo != null">
        gdshop_termsOfServiceAgreedTo = #{record.gdshop_termsOfServiceAgreedTo,jdbcType=BIT},
      </if>
      <if test="record.snapshot_id != null">
        snapshot_id = #{record.snapshot_id,jdbcType=INTEGER},
      </if>
      <if test="record.orderXML != null">
        orderXML = #{record.orderXML,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update ErrorOrderRequestXml
    set errorId = #{record.errorId,jdbcType=INTEGER},
    order_id = #{record.order_id,jdbcType=INTEGER},
    privateLabelId = #{record.privateLabelId,jdbcType=INTEGER},
    createDate = #{record.createDate,jdbcType=TIMESTAMP},
    processCtrl = #{record.processCtrl,jdbcType=CHAR},
    api_orderRequestStatusId = #{record.api_orderRequestStatusId,jdbcType=INTEGER},
    messageText = #{record.messageText,jdbcType=VARCHAR},
    orderXMLDBCS = #{record.orderXMLDBCS,jdbcType=LONGNVARCHAR},
    gdshop_termsOfServiceAgreedTo = #{record.gdshop_termsOfServiceAgreedTo,jdbcType=BIT},
    snapshot_id = #{record.snapshot_id,jdbcType=INTEGER},
    orderXML = #{record.orderXML,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ErrorOrderRequestXml
    set errorId = #{record.errorId,jdbcType=INTEGER},
    order_id = #{record.order_id,jdbcType=INTEGER},
    privateLabelId = #{record.privateLabelId,jdbcType=INTEGER},
    createDate = #{record.createDate,jdbcType=TIMESTAMP},
    processCtrl = #{record.processCtrl,jdbcType=CHAR},
    api_orderRequestStatusId = #{record.api_orderRequestStatusId,jdbcType=INTEGER},
    messageText = #{record.messageText,jdbcType=VARCHAR},
    orderXMLDBCS = #{record.orderXMLDBCS,jdbcType=LONGNVARCHAR},
    gdshop_termsOfServiceAgreedTo = #{record.gdshop_termsOfServiceAgreedTo,jdbcType=BIT},
    snapshot_id = #{record.snapshot_id,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective"
    parameterType="com.godaddy.ecomm.base.fulfillment.ErrorOrderRequestXml">
    update ErrorOrderRequestXml
    <set>
      <if test="order_id != null">
        order_id = #{order_id,jdbcType=INTEGER},
      </if>
      <if test="privateLabelId != null">
        privateLabelId = #{privateLabelId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        createDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="processCtrl != null">
        processCtrl = #{processCtrl,jdbcType=CHAR},
      </if>
      <if test="api_orderRequestStatusId != null">
        api_orderRequestStatusId = #{api_orderRequestStatusId,jdbcType=INTEGER},
      </if>
      <if test="messageText != null">
        messageText = #{messageText,jdbcType=VARCHAR},
      </if>
      <if test="orderXMLDBCS != null">
        orderXMLDBCS = #{orderXMLDBCS,jdbcType=LONGNVARCHAR},
      </if>
      <if test="gdshop_termsOfServiceAgreedTo != null">
        gdshop_termsOfServiceAgreedTo = #{gdshop_termsOfServiceAgreedTo,jdbcType=BIT},
      </if>
      <if test="snapshot_id != null">
        snapshot_id = #{snapshot_id,jdbcType=INTEGER},
      </if>
      <if test="orderXML != null">
        orderXML = #{orderXML,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where errorId = #{errorId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs"
    parameterType="com.godaddy.ecomm.base.fulfillment.ErrorOrderRequestXml">
    update ErrorOrderRequestXml
    set order_id = #{order_id,jdbcType=INTEGER},
    privateLabelId = #{privateLabelId,jdbcType=INTEGER},
    createDate = #{createDate,jdbcType=TIMESTAMP},
    processCtrl = #{processCtrl,jdbcType=CHAR},
    api_orderRequestStatusId = #{api_orderRequestStatusId,jdbcType=INTEGER},
    messageText = #{messageText,jdbcType=VARCHAR},
    orderXMLDBCS = #{orderXMLDBCS,jdbcType=LONGNVARCHAR},
    gdshop_termsOfServiceAgreedTo = #{gdshop_termsOfServiceAgreedTo,jdbcType=BIT},
    snapshot_id = #{snapshot_id,jdbcType=INTEGER},
    orderXML = #{orderXML,jdbcType=LONGVARCHAR}
    where errorId = #{errorId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey"
    parameterType="com.godaddy.ecomm.base.fulfillment.ErrorOrderRequestXml">
    update errorOrderRequestXml
    set order_id = #{order_id,jdbcType=INTEGER},
    privateLabelId = #{privateLabelId,jdbcType=INTEGER},
    createDate = #{createDate,jdbcType=TIMESTAMP},
    processCtrl = #{processCtrl,jdbcType=CHAR},
    api_orderRequestStatusId = #{api_orderRequestStatusId,jdbcType=INTEGER},
    messageText = #{messageText,jdbcType=VARCHAR},
    orderXMLDBCS = #{orderXMLDBCS,jdbcType=LONGNVARCHAR},
    gdshop_termsOfServiceAgreedTo = #{gdshop_termsOfServiceAgreedTo,jdbcType=BIT},
    snapshot_id = #{snapshot_id,jdbcType=INTEGER}
    where errorId = #{errorId,jdbcType=INTEGER}
  </update>
</mapper>